server {
    listen       80;
    listen  [::]:80;
    server_name harpsharp.com;
    include /etc/nginx/conf.d/header.conf;
    return 308 https://harpsharp.com$request_uri;
}

upstream auth {
	server auth:8080;
}

upstream board {
    server board:8080;
}

upstream todo {
    server todo:8080;
}

upstream front {
    server auth:8080;
}

upstream swagger_auth {
    server swagger-auth:8080;
}


server {
       listen  443 ssl;
       listen [::]:443;
       server_name harpsharp.com;
       # Certificate
       ssl_certificate /etc/letsencrypt/live/harpsharp.com/fullchain.pem;
       # Private Key
       ssl_certificate_key /etc/letsencrypt/live/harpsharp.com/privkey.pem;
       include /etc/letsencrypt/options-ssl-nginx.conf;
       ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;



       location = / {
            include /etc/nginx/conf.d/header.conf;
            proxy_pass https://front;
       }

       # API 엔드포인트 설정
       location = /login {
            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://auth/login;
       }

       location = /logout {
            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://auth/logout;
       }

       location = /join {
            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://auth/join;
       }

       location /user {
            limit_except GET POST PATCH DELETE {
                deny all;
            }

            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://auth/user;
       }

       location = /reissue {
            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://auth/reissue;
       }

       location = /docs/auth {
            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://auth;
       }

       location /swagger-auth {
            rewrite ^/swagger-auth / break;
            include /etc/nginx/conf.d/header.conf;
            add_header 'Access-Control-Allow-Origin' '*';
            proxy_pass http://swagger-auth;
       }

       location /todo {
            set $auth_request '';

            if ($request_method != 'GET') {
                set $auth_request /verify/todo;
            }

            auth_request $auth_request;
            include /etc/nginx/conf.d/header.conf;
            proxy_pass http://todo/todo;
       }

       location = /verify/todo {
            internal;
            proxy_pass http://auth/verify/todo;
       }

       location = /board {
            proxy_pass http://board;
            include /etc/nginx/conf.d/header.conf;
       }

       location /board(.*)?$ {
            if ($request_method != GET) {
                rewrite .* /auth$1 last;
            }

            proxy_pass http://board;
            include /etc/nginx/conf.d/header.conf;
       }

       location /auth/board(.*)?$ {
            auth_request /verify/posts;
            proxy_pass http://board$1;
            include /etc/nginx/conf.d/header.conf;
       }

       location /verify/posts {
            proxy_pass http://auth;
            include /etc/nginx/conf.d/header.conf;
       }
}
